generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int           @id @default(autoincrement())
  email       String        @unique
  role        String        @default("client")
  username    String?
  password    String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @default(now()) @updatedAt
  projects    Project[]
  Worker      Worker[]
  threeDModel threeDModel[]
  Vendor      Vendor[]
}

model Project {
  id             Int             @id @default(autoincrement())
  projectName    String
  ownerName      String
  location       String?
  startDate      DateTime?
  endDate        DateTime?
  status         String          @default("onGoing")
  builderId      Int
  builder        User            @relation(fields: [builderId], references: [id])
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  budgets        Budget[]
  projectWorkers ProjectWorker[]
  threeDModel    threeDModel[]
}

model Worker {
  id             Int             @id @default(autoincrement())
  name           String
  contact        String?
  profile        String?
  designation    String?
  salary         String?
  builderId      Int
  builder        User            @relation(fields: [builderId], references: [id])
  projectWorkers ProjectWorker[]
}

model ProjectWorker {
  id         Int          @id @default(autoincrement())
  project    Project      @relation(fields: [projectId], references: [id])
  projectId  Int
  worker     Worker       @relation(fields: [workerId], references: [id])
  workerId   Int
  createdAt  DateTime     @default(now())
  attendance Attendance[]
}

model Attendance {
  id              Int           @id @default(autoincrement())
  projectWorkerId Int
  date            DateTime      @default(now())
  status          String
  shifts          Float?
  projectWorker   ProjectWorker @relation(fields: [projectWorkerId], references: [id])
}

model Budget {
  id        Int      @id @default(autoincrement())
  amount    Float
  inHand    Float?
  projectId Int
  project   Project  @relation(fields: [projectId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Transaction Transaction[]
}

model Vendor {
  id           Int           @id @default(autoincrement())
  VendorName   String
  address      String?
  email        String?
  contact      String?
  profile      String?
  companyName  String?
  builderId    Int
  builder      User          @relation(fields: [builderId], references: [id])
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  transactions Transaction[]
}

model Transaction {
  id        Int      @id @default(autoincrement())
  amount    Int
  type      String?
  note      String?
  vendorId  Int?
  vendor    Vendor?  @relation(fields: [vendorId], references: [id])
  budgetId  Int
  budget    Budget   @relation(fields: [budgetId], references: [id])
  createdAt DateTime @default(now())
}

model threeDModel {
  id        Int      @id @default(autoincrement())
  modelName String
  modelUrl  String
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  projectId Int
  project   Project  @relation(fields: [projectId], references: [id])
  createdAt DateTime @default(now())
}
